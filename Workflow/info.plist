<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.updateautomationtasks</string>
	<key>connections</key>
	<dict>
		<key>36CF8038-7C50-4A13-9975-E868191C743B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F1EFE58B-AFB7-435C-8183-9D556910E684</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F1EFE58B-AFB7-435C-8183-9D556910E684</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5AF09E6E-0727-488A-A05F-25A57E355A87</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>9AFB6097-23B5-4179-935D-9086BDCA6767</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Update Automation Tasks During Alfred 5 Early Access</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Update Automation Tasks</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>updateat</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Update Automation Tasks</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>36CF8038-7C50-4A13-9975-E868191C743B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>readonly repo_name='automation-tasks'
readonly zip_url="https://github.com/alfredapp/${repo_name}/archive/refs/heads/main.zip"
readonly automation_dir="${HOME}/Library/Application Support/Alfred/Automation"
readonly tmp_dir="$(mktemp -d)"

# Trash old directory
/usr/bin/osascript -l JavaScript -e "
  const tasksURL = $.NSURL.alloc.initFileURLWithPath('${automation_dir}' + '/Tasks')
  $.NSFileManager.defaultManager.trashItemAtURLResultingItemURLError(tasksURL, undefined, undefined)
"

# Download and unpack new zip
mkdir -p "${automation_dir}"
curl --location --no-buffer "${zip_url}" | ditto -xk - "${tmp_dir}"
mv "${tmp_dir}/${repo_name}-main/Tasks" "${automation_dir}"

# Cleanup
rm -rf "${tmp_dir}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F1EFE58B-AFB7-435C-8183-9D556910E684</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Special values for OneUpdater reuse
readonly workflow_webaddress="$(/usr/libexec/PlistBuddy -c 'print webaddress' './info.plist')"
readonly workflow_repo="$(basename "$(dirname "${workflow_webaddress}")")/$(basename "${workflow_webaddress}")"

# THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="${workflow_webaddress}/raw/main/Workflow/info.plist"
readonly workflow_url="${workflow_repo}"
readonly download_type='github_release'
readonly frequency_check='1'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>5AF09E6E-0727-488A-A05F-25A57E355A87</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>Auomation Tasks have been updated</string>
				<key>title</key>
				<string>Update Complete</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>9AFB6097-23B5-4179-935D-9086BDCA6767</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Automation Tasks are one of the many new features of Alfred 5, [which is currently in Early Access](https://www.alfredapp.com/help/getting-started/early-access/). For the time being you need this Workflow to install and update them. By Alfred 5’s General Release, the process will be automatic.

Run `updateat` to bring your local copy of Automation Tasks up-to-date.

![Alfred search for updateat](images/about/updateat.png)

To learn more about Automation Tasks, [see their help page](https://www.alfredapp.com/help/workflows/automations/).</string>
	<key>uidata</key>
	<dict>
		<key>36CF8038-7C50-4A13-9975-E868191C743B</key>
		<dict>
			<key>xpos</key>
			<real>65</real>
			<key>ypos</key>
			<real>45</real>
		</dict>
		<key>5AF09E6E-0727-488A-A05F-25A57E355A87</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>45</real>
		</dict>
		<key>9AFB6097-23B5-4179-935D-9086BDCA6767</key>
		<dict>
			<key>xpos</key>
			<real>500</real>
			<key>ypos</key>
			<real>200</real>
		</dict>
		<key>F1EFE58B-AFB7-435C-8183-9D556910E684</key>
		<dict>
			<key>xpos</key>
			<real>280</real>
			<key>ypos</key>
			<real>45</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>version</key>
	<string>2022.1</string>
	<key>webaddress</key>
	<string>https://github.com/alfredapp/update-automation-tasks-workflow/</string>
</dict>
</plist>
